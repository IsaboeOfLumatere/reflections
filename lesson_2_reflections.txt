Question: What happens when you initialize a repository? Why do you need to do it?

Answer: When you create a repository in a directory that already contains files,
		Git simply creates a new repository with those files. Otherwise, the repository
		remains empty. Repositories are incredibly useful for version control in
		Git.


Question: How is the staging area different from the working directory and repository?
		  What value do you think it offers?

Answer: The staging area serves as an intermediate step between the working directory
		and repository. It offers more control to the user over what to commit and
		what not to.


Question: How can you use the staging area to make sure you have one commit per
		  logical change?

Answer: You can use git diff --staged to see the changes between the staging area
		and the most recent commit, so you know that when you commit the changes
		in the staging area, they will be a logical change.


Question: What are some situations when branches woiuld be helpful in keeping your
		  history organized? How would branches help?

Answer: Branches are helpful when you want to try an experimental feature or change
		something fundamental that might break your code. Thus, if the feature or
		change ends up working, you can always merge back with the master branch,
		but if the code breaks, you still have the master version to work with.


Question: How do the diagrams help you visualize the branch structure?

Answer: Since git branches and commits are very often non-linear, a diagram can
		help you understand exactly which commits and branches connect to which.